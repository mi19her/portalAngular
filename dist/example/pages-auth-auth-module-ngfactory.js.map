{"version":3,"sources":["./src/app/pages/auth/auth.component.html","./src/app/pages/auth/auth.component.ts","./src/app/pages/auth/auth.module.ts","./src/app/pages/auth/auth.routing.ts","./src/app/pages/auth/first-pass/first-pass.component.html","./src/app/pages/auth/first-pass/first-pass.component.ts","./src/app/pages/auth/forgot-pass/forgot-pass.component.html","./src/app/pages/auth/forgot-pass/forgot-pass.component.ts","./src/app/pages/auth/form-first-pass/form-first-pass.component.html","./src/app/pages/auth/form-first-pass/form-first-pass.component.ts","./src/app/pages/auth/form-forgot-pass/form-forgot-pass.component.html","./src/app/pages/auth/form-forgot-pass/form-forgot-pass.component.ts","./src/app/pages/auth/login/login.component.html","./src/app/pages/auth/login/login.component.ts","./src/app/services/auth-services.service.ts","./src/app/shared/shared.module.ts"],"names":[],"mappings":"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","file":"pages-auth-auth-module-ngfactory.js","sourcesContent":["<div class=\"limiter\">\n    <div class=\"container-login100\">\n    </div>\n    <div class=\"wrap-login100\">\n        <form class=\"form-signin\">\n            <div>\n                <img src=\"../../../assets/images/r360.svg\" alt=\"\" width=\"104\">\n            </div>\n            <router-outlet></router-outlet>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { routing } from './auth.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../../material/material.module';\nimport { AmplifyAngularModule } from 'aws-amplify-angular';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { ForgotPassComponent } from './forgot-pass/forgot-pass.component';\nimport { FormForgotPassComponent } from './form-forgot-pass/form-forgot-pass.component';\nimport { FirstPassComponent } from './first-pass/first-pass.component';\nimport { FormFirstPassComponent } from './form-first-pass/form-first-pass.component';\n\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    LoginComponent,\n    AuthComponent,\n    ForgotPassComponent,\n    FormForgotPassComponent,\n    FirstPassComponent,\n    FormFirstPassComponent\n],\n  imports: [\n    CommonModule,\n    routing,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    AmplifyAngularModule,\n    MaterialModule,\n  ]\n})\nexport class AuthModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { AuthComponent } from './auth.component';\nimport { ForgotPassComponent } from './forgot-pass/forgot-pass.component';\nimport { FormForgotPassComponent } from './form-forgot-pass/form-forgot-pass.component';\nimport { FirstPassComponent } from './first-pass/first-pass.component';\nimport { FormFirstPassComponent } from './form-first-pass/form-first-pass.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AuthComponent,\n        children: [\n            { path: '', redirectTo: 'login', pathMatch: 'full' },\n            { path: 'login', component: LoginComponent, data: { title: ':: Login :: PortalR360 :: RANSA ::' } },\n            { path: 'forgot-pass', component: ForgotPassComponent, data: { title: ':: Login :: PortalR360 :: RANSA ::' } },\n            { path: 'form-forgotPass/:user', component: FormForgotPassComponent, data: { title: ':: Login :: PortalR360 :: RANSA ::' } },\n            { path: 'first-pass', component: FirstPassComponent, data: { title: ':: Login :: PortalR360 :: RANSA ::' } },\n            { path: 'form-firstPass', component: FormFirstPassComponent, data: { title: ':: Login :: PortalR360 :: RANSA ::' } }\n        ]\n    },\n];\n\nexport const routing = RouterModule.forChild(routes);\n","<form [formGroup]=\"formPass\">\n    <h2 class=\"margin\" >¡Antes de empezar!</h2>\n    <p>Por tu seguridad, es necesario que cambies la contraseña provisional que te proporcionamos.</p>\n    <mat-form-field [hideRequiredMarker]=\"hideRequiredControl\">\n        <input matInput placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"newPass\" required>\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        <mat-label>Nueva contraseña</mat-label>\n    </mat-form-field>\n    <mat-form-field [hideRequiredMarker]=\"hideRequiredControl\">\n        <input matInput placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"confirmNewPass\" required>\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        <mat-label>Confirma tu nueva contraseña</mat-label>\n        <mat-error *ngIf=\"!inputConfirmPass.valid\">\n            {{message()}}\n        </mat-error>\n    </mat-form-field>\n    <p class=\"size\" >Asegúrate que la contraseña tenga más de 6 caracteres, incluya mayúsculas, minúsculas, números y caracteres especiales</p>\n    <button mat-raised-button color=\"accent\" (click)=\"firstPass()\" [disabled]=\"!formPass.valid\" *ngIf=\"!load; else sppin\">\n        Ingresar\n    </button>\n    <ng-template #sppin>\n        <button class=\"sppin\">\n            <mat-spinner *ngIf=\"load\" [diameter]=\"30\"></mat-spinner>\n        </button>\n    </ng-template>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthServicesService } from '../../../services/auth-services.service';\nimport { FormGroup, FormBuilder, Validators, FormControl, AbstractControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-first-pass',\n  templateUrl: './first-pass.component.html',\n  styleUrls: ['./first-pass.component.css']\n})\nexport class FirstPassComponent implements OnInit {\n  formPass: FormGroup;\n  hideRequiredControl = new FormControl(false);\n  hide = false;\n  load = false;\n\n  get inputNewPass() {return this.formPass.get('newPass'); }\n  get inputConfirmPass() {return this.formPass.get('confirmNewPass'); }\n\n  constructor(private route: Router,\n              private service: AuthServicesService,\n              private build: FormBuilder) {\n    this.formPass = this.build.group({\n      hideRequired: this.hideRequiredControl,\n      newPass: [null, [Validators.required]],\n      confirmNewPass: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-;,:]+$')\n      ]))\n    }, {validator: this.comparePass});\n  }\n\n  comparePass(b: AbstractControl): {invalid: boolean} {\n    if (b.get('newPass').value !== b.get('confirmNewPass').value) {\n        b.get('confirmNewPass').setErrors({match: true});\n        return {invalid: true};\n    }\n  }\n\n  message() {\n    if (this.inputConfirmPass.hasError('match')){\n      return 'Las contraseñas no coinciden';\n    } else if (this.inputConfirmPass.hasError('pattern')){\n      return 'Contraseña insegura, esta contraseña no cumple con los requisitos de una contraseña segura';\n    }\n  }\n  ngOnInit(): void {\n    console.log(this.service.obj, 'objetooo');\n  }\n\n  firstPass() {\n    this.load = true;\n    this.service.firstpass(this.service.obj, this.inputNewPass.value )\n    .then((data) => {\n      console.log(data, 'firstttt');\n      this.route.navigate(['/auth/form-firstPass']);\n    })\n    .catch(err => {\n      console.log(err);\n      this.load = false;\n    });\n  }\n\n}\n","<form [formGroup]=\"formForgot\">\n    <h2 class=\"margin\">¿Olvidaste la contraseña?</h2>\n    <p>Si tu correo de usuario esta registrado, se le enviará un codigo de verificación</p>\n    <mat-form-field [hideRequiredMarker]=\"hideRequiredControl\" >\n        <input matInput type=\"email\" formControlName=\"email\"\n            autocomplete=\"email\" required>\n        <mat-label>Ingresa tu correo de usuario</mat-label>\n        <mat-error *ngIf=\"!emailInput.valid\">\n            {{getMessageError()}}\n        </mat-error>\n    </mat-form-field>\n    <button mat-raised-button color=\"accent\" routerLinkActive=\"router-link-active\" type=\"button\"\n    (click)=\"sendCode()\" [disabled]=\"!formForgot.valid\" *ngIf=\"!load; else sppin\">\n        Ingresar\n    </button>\n    <ng-template #sppin>\n        <button class=\"sppin\">\n            <mat-spinner *ngIf=\"load\" [diameter]=\"30\"></mat-spinner>\n        </button>\n    </ng-template>\n</form>","import { Component } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { AuthServicesService } from '../../../services/auth-services.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-pass',\n  templateUrl: './forgot-pass.component.html',\n  styleUrls: ['./forgot-pass.component.css']\n})\nexport class ForgotPassComponent {\n\n  formForgot: FormGroup;\n  hideRequiredControl = new FormControl(false);\n  load = false;\n\n  constructor(private _build: FormBuilder,\n              private _router: Router,\n              private service: AuthServicesService) {\n    this.formForgot = this._build.group({\n      hideRequired: this.hideRequiredControl,\n      email: [null, [Validators.email, Validators.required, Validators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\") ]]\n    });\n  }\n  get emailInput() { return this.formForgot.get('email'); }\n\n  getMessageError() {\n    if (this.emailInput.hasError('email')){\n      return 'Usuario incorecto';\n    }\n    if (this.emailInput.hasError('pattern')){\n      return 'Usuario incorecto';\n    }\n  }\n\n  sendCode() {\n    this.load = true;\n    this.service.forgot(this.emailInput.value)\n      .then(() => {\n       this._router.navigate(['auth/form-forgotPass', this.emailInput.value]);\n      }).catch((error: any) => {\n        console.log(error, 'err');\n        this.load = false;\n      });\n  }\n}\n","<form>\n    <h2 class=\"margin\">!Contraseña actualizada¡</h2>\n    <p>Ahora inicia sesion con tu nueva contraseña</p>\n    <button mat-raised-button color=\"accent\" [routerLink]=\"['/auth/login']\">Entendido</button>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form-first-pass',\n  templateUrl: './form-first-pass.component.html',\n  styleUrls: ['./form-first-pass.component.css']\n})\nexport class FormFirstPassComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form [formGroup]=\"formForgot\">\n    <h2 class=\"margin\">Cambia tu contraseña</h2>\n    <p>Ingresa el código que enviamos a tu correo y cambia tu contraseña</p>\n    <mat-form-field [hideRequiredMarker]=\"hideRequiredControl\">\n        <input matInput type=\"text\" formControlName=\"code\" required>\n        <mat-label >Codigo de verificación</mat-label>\n        <mat-error *ngIf=\"!codeInput.valid\" >\n            {{messageErr}}\n        </mat-error>\n    </mat-form-field>\n    <mat-form-field [hideRequiredMarker]=\"hideRequiredControl\">\n        <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"newpass\" required>\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        <mat-label>Nueva contraseña</mat-label>\n    </mat-form-field>\n    <mat-form-field [hideRequiredMarker]=\"hideRequiredControl\">\n        <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"confirmpass\" required >\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        <mat-label>Confirma tu nueva contraseña</mat-label>\n        <mat-error *ngIf=\"!confirmPass.valid\" >\n            {{message()}}\n        </mat-error>\n    </mat-form-field>\n    <p class=\"size\">Asegúrate que la contraseña tenga más de 6 caracteres, incluya mayúsculas, minúsculas, números y caracteres especiales</p>\n    <button mat-raised-button color=\"accent\" routerLinkActive=\"router-link-active\" type=\"button\"(click)=\"changePass()\" [disabled]=\"!formForgot.valid\" *ngIf=\"!load; else sppin\">\n        Ingresar\n    </button>\n    <ng-template #sppin>\n        <button class=\"sppin\">\n            <mat-spinner *ngIf=\"load\" [diameter]=\"30\"></mat-spinner>\n        </button>\n    </ng-template>\n    <a routerLink=\"../../forgot-pass\">No he recibido el código de verificación</a>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder, FormControl, AbstractControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport Auth from '@aws-amplify/auth';\n\n@Component({\n  selector: 'app-form-forgot-pass',\n  templateUrl: './form-forgot-pass.component.html',\n  styleUrls: ['./form-forgot-pass.component.css']\n})\nexport class FormForgotPassComponent implements OnInit {\n  email: string;\n  formForgot: FormGroup;\n  hideRequiredControl = new FormControl(false);\n  hide = false;\n  load = false;\n\n  get codeInput() { return this.formForgot.get('code'); }\n  get newPass() { return this.formForgot.get('newpass'); }\n  get confirmPass() { return this.formForgot.get('confirmpass'); }\n\n  constructor(private route: ActivatedRoute,\n    private _routing: Router,\n    private _build: FormBuilder\n  ) {\n    this.formForgot = this._build.group({\n      hideRequired: this.hideRequiredControl,\n      code: [null, [Validators.required, Validators.maxLength(6)]],\n      newpass: [null, [Validators.required]],\n      confirmpass: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-;,:]+$')\n      ]))\n    }, { validator: this.passwordCheckconfirm });\n  }\n\n  passwordCheckconfirm(c: AbstractControl): { invalid: boolean } {\n    if (c.get('newpass').value !== c.get('confirmpass').value) {\n      c.get('confirmpass').setErrors({ noMatch: true });\n      return { invalid: true };\n    }\n  }\n\n  message() {\n    if (this.confirmPass.hasError('noMatch')) {\n      return 'Las contraseñas no coinciden';\n    }\n    if (this.confirmPass.hasError('pattern')) {\n      return 'Contraseña insegura, esta contraseña no cumple con los requisitos de una contraseña segura';\n    }\n  }\n\n  ngOnInit(): void {\n    this.email = this.route.snapshot.paramMap.get('user');\n    console.log(this.email, 'emaillllllll');\n  }\n\n  changePass() {\n    this.load = true;\n    Auth.forgotPasswordSubmit(this.email, this.codeInput.value, this.newPass.value)\n      .then(data => {\n        console.log(data, 'DATA');\n        this._routing.navigate(['/auth/form-firstPass']);\n      })\n      .catch(err => {\n        this.load = false;\n        console.log(err);\n      });\n  }\n}\n","<form [formGroup]=\"formUser\">\n    <h2 class=\"margin\">¡Te damos la bienvenida!</h2>\n    <mat-form-field [hideRequiredMarker]=\"hideRequiredControl\">\n        <input matInput type=\"email\" formControlName=\"username\" autocomplete=\"email\" required>\n        <mat-label>Correo de usuario</mat-label>\n        <mat-error *ngIf=\"!emailInput.valid\">\n            {{getEmailInputError()}}\n        </mat-error>\n    </mat-form-field>\n    <mat-form-field [hideRequiredMarker]=\"hideRequiredControl\">\n        <input matInput placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        <mat-label>Contraseña</mat-label>\n        <mat-error *ngIf=\"!passwordInput.valid\">\n            {{getPasswordInputError()}}\n        </mat-error>\n    </mat-form-field>\n    <button mat-raised-button color=\"accent\" (click)=\"singnIn()\" [disabled]=\"!formUser.valid\" *ngIf=\"!load; else sppin\">\n        Ingresar\n    </button>\n    <ng-template #sppin>\n        <button class=\"sppin\">\n            <mat-spinner *ngIf=\"load\" [diameter]=\"30\"></mat-spinner>\n        </button>\n    </ng-template>\n    <a routerLink=\"../forgot-pass\">¿Olvidaste la contraseña?</a>\n</form>","import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, AbstractControl } from '@angular/forms';\nimport { AuthServicesService } from '../../../services/auth-services.service';\nimport { CognitoUser } from '@aws-amplify/auth';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  formUser: FormGroup;\n  hideRequiredControl = new FormControl(false);\n  hide = true;\n  load = false;\n\n  constructor(private _build: FormBuilder,\n              public auth: AuthServicesService,\n              private _router: Router) {\n    this.formUser = this._build.group({\n      hideRequired: this.hideRequiredControl,\n      username: [null, [Validators.email, Validators.required]],\n      password: [null, [Validators.required]]\n    }, this.validateUser);\n  }\n\n  get emailInput() { return this.formUser.get('username'); }\n  get passwordInput() { return this.formUser.get('password'); }\n\n  validateUser(c: AbstractControl): { invalid: boolean } {\n    c.get('password').setErrors({ noMatch: true });\n    return { invalid: true };\n  }\n\n\n  getEmailInputError(message) {\n    if (this.emailInput.hasError('email')) {\n      message = 'Usuario incorrecto';\n    } else if (this.emailInput.hasError('required')) {\n      message = 'Usuario es requerido';\n    }\n    return message;\n  }\n\n  getPasswordInputError(pass) {\n    if (this.passwordInput.hasError('required')) {\n      pass = 'Contraseña es requerido';\n    } else if (this.passwordInput.hasError('noMatch')){\n      pass = 'Usuario o contraseña incorecta';\n    }\n    return pass;\n  }\n\n  singnIn() {\n    this.load = true;\n    this.auth.signIn(this.emailInput.value, this.passwordInput.value)\n      .then((user: CognitoUser | any) => {\n        if (user.challengeName === 'NEW_PASSWORD_REQUIRED') {\n          this.auth.obj = user;\n          this._router.navigate(['/auth/first-pass']);\n          console.log(user, 'user');\n        } else {\n          this._router.navigate(['/portal/home']);\n        }\n      })\n      .catch((error: any) => {\n        switch (error.message) {\n          case 'Incorrect username or password.':\n            this.passwordInput.setErrors({ noMatch: true});\n            break;\n        }\n        this.load = false;\n        console.log(error, 'error');\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport Auth from '@aws-amplify/auth';\nimport { AmplifyService } from 'aws-amplify-angular';\nimport { CognitoUser } from 'amazon-cognito-identity-js';\nimport { resolve } from 'dns';\nimport { rejects } from 'assert';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthServicesService {\n  public loggedIn: boolean;\n  codeSend = false;\n  obj: any;\n\n  signedIn: boolean;\n  user: any;\n  greeting: string;\n  constructor(private amplifyService: AmplifyService) {\n    this.amplifyService.authStateChange$\n      .subscribe(authState => {\n        console.log(authState, 'stateee');\n        this.signedIn = authState.state === 'signedIn';\n        if (!authState.user) {\n          this.user = null;\n        } else {\n          this.user = authState.user;\n          this.greeting = 'Hello ' + this.user.username;\n        }\n      });\n  }\n\n  signIn(username: string, password: string): Promise<CognitoUser | any> {\n    return new Promise((resolve, reject) => {\n      Auth.signIn(username, password)\n        .then((user: CognitoUser | any) => {\n          this.loggedIn = true;\n          console.log(user, 'user');\n          resolve(user);\n        }).catch((error: any) => reject(error));\n    });\n  }\n\n  firstpass(user: CognitoUser | any, newPassword: string): Promise<CognitoUser | any> {\n    return new Promise((resolve, reject) => {\n      Auth.completeNewPassword(user, newPassword, user.challengeParam.requiredAttributes)\n        .then((data) => {\n          console.log(data, 'dataaa');\n          resolve(data);\n        }).catch((error: any) => reject(error));\n    });\n  }\n\n  forgot(username: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      Auth.forgotPassword(username)\n        .then((data: any) => {\n          this.codeSend = true;\n          this.loggedIn = false;\n          console.log(data, 'forgot');\n          resolve();\n        }).catch((error: any) => console.error(error, 'errorrrr'));\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class SharedModule { }\n"],"sourceRoot":"webpack:///"}